// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Bi_io = require("@roddynpm/bs-biniou/lib/js/src/bi_io.bs.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function biniou_of_json(param) {
  if (typeof param === "number") {
    return /* Unit */948106916;
  } else {
    var variant = param[0];
    if (variant >= 708012133) {
      if (variant !== 726928360) {
        if (variant >= 848054398) {
          if (variant >= 963043957) {
            var a = $$Array.map((function (param) {
                    var s = param[0];
                    return /* tuple */[
                            s,
                            Bi_io.hash_name(s),
                            biniou_of_json(param[1])
                          ];
                  }), $$Array.of_list(param[1]));
            return /* `Record */[
                    847309489,
                    a
                  ];
          } else {
            var l = param[1];
            if (l) {
              var a$1 = $$Array.map(biniou_of_json, $$Array.of_list(l));
              var tag = Bi_io.tag_of_tree(Caml_array.caml_array_get(a$1, 0));
              try {
                for(var i = 1 ,i_finish = a$1.length - 1 | 0; i <= i_finish; ++i){
                  if (Bi_io.tag_of_tree(Caml_array.caml_array_get(a$1, i)) !== tag) {
                    throw Pervasives.Exit;
                  }
                  
                }
                return /* `Array */[
                        951901561,
                        /* tuple */[
                          tag,
                          a$1
                        ]
                      ];
              }
              catch (exn){
                if (exn === Pervasives.Exit) {
                  return Pervasives.failwith("Cannot convert heterogenous array to biniou");
                } else {
                  throw exn;
                }
              }
            } else {
              return /* `Array */[
                      951901561,
                      undefined
                    ];
            }
          }
        } else if (variant >= 737456202) {
          return /* `Bool */[
                  737456202,
                  param[1]
                ];
        } else {
          var match = param[1];
          var o = match[1];
          var s = match[0];
          var o$1 = o !== undefined ? biniou_of_json(o) : undefined;
          return /* `Variant */[
                  708012133,
                  /* tuple */[
                    s,
                    Bi_io.hash_name(s),
                    o$1
                  ]
                ];
        }
      } else {
        return /* `Tuple */[
                726928360,
                $$Array.map(biniou_of_json, $$Array.of_list(param[1]))
              ];
      }
    } else if (variant >= 3654863) {
      if (variant >= 365180284) {
        return /* `Float64 */[
                928627642,
                param[1]
              ];
      } else {
        return /* `Svint */[
                412180492,
                param[1]
              ];
      }
    } else if (variant >= -752863768) {
      return Pervasives.failwith("Cannot convert big int to biniou");
    } else {
      return /* `String */[
              -976970511,
              param[1]
            ];
    }
  }
}

function json_of_biniou(x) {
  if (typeof x === "number") {
    return /* Null */870828711;
  } else {
    var variant = x[0];
    if (variant >= 708012133) {
      if (variant >= 847309489) {
        if (variant >= 951901561) {
          if (variant >= 1063160078) {
            return Pervasives.failwith("Cannot convert uvint to JSON");
          } else {
            var match = x[1];
            if (match !== undefined) {
              return /* `List */[
                      848054398,
                      $$Array.to_list($$Array.map(json_of_biniou, match[1]))
                    ];
            } else {
              return /* `List */[
                      848054398,
                      /* [] */0
                    ];
            }
          }
        } else if (variant >= 928626971) {
          return /* `Float */[
                  365180284,
                  x[1]
                ];
        } else {
          return /* `Assoc */[
                  963043957,
                  $$Array.to_list($$Array.map((function (param) {
                              var match = param[0];
                              if (match !== undefined) {
                                return /* tuple */[
                                        match,
                                        json_of_biniou(param[2])
                                      ];
                              } else {
                                return Pervasives.failwith("Cannot convert hashed field name to JSON");
                              }
                            }), x[1]))
                ];
        }
      } else if (variant >= 737456202) {
        if (variant >= 815034505) {
          return Pervasives.failwith("Cannot convert int8 to JSON");
        } else {
          return /* `Bool */[
                  737456202,
                  x[1]
                ];
        }
      } else if (variant >= 726928360) {
        return /* `Tuple */[
                726928360,
                $$Array.to_list($$Array.map(json_of_biniou, x[1]))
              ];
      } else {
        var match$1 = x[1];
        var match$2 = match$1[0];
        if (match$2 !== undefined) {
          var match$3 = match$1[2];
          var s = match$2;
          if (match$3 !== undefined) {
            return /* `Variant */[
                    708012133,
                    /* tuple */[
                      s,
                      json_of_biniou(match$3)
                    ]
                  ];
          } else {
            return /* `Variant */[
                    708012133,
                    /* tuple */[
                      s,
                      undefined
                    ]
                  ];
          }
        } else {
          return Pervasives.failwith("Cannot convert hashed variant name to JSON");
        }
      }
    } else if (variant >= -775957819) {
      if (variant >= 412180492) {
        if (variant >= 504440814) {
          var match$4 = x[1];
          if (match$4 !== undefined) {
            var match$5 = match$4;
            var header = match$5[0];
            return /* `List */[
                    848054398,
                    $$Array.to_list($$Array.map((function (param) {
                                var header$1 = header;
                                var a = param;
                                var n = header$1.length;
                                if (a.length !== n) {
                                  Pervasives.failwith("Malformed biniou table");
                                }
                                var l = /* [] */0;
                                for(var i = n - 1 | 0; i >= 0; --i){
                                  var match = Caml_array.caml_array_get(header$1, i);
                                  var o = match[0];
                                  var x = Caml_array.caml_array_get(a, i);
                                  if (o !== undefined) {
                                    l = /* :: */[
                                      /* tuple */[
                                        o,
                                        json_of_biniou(x)
                                      ],
                                      l
                                    ];
                                  } else {
                                    Pervasives.failwith("Cannot convert hashed field name to JSON");
                                  }
                                }
                                return /* `Assoc */[
                                        963043957,
                                        l
                                      ];
                              }), match$5[1]))
                  ];
          } else {
            return /* `List */[
                    848054398,
                    /* [] */0
                  ];
          }
        } else {
          return /* `Int */[
                  3654863,
                  x[1]
                ];
        }
      } else if (variant >= 221365804) {
        return Pervasives.failwith("Cannot convert num_variant to JSON");
      } else {
        return Pervasives.failwith("Cannot convert shared node to JSON");
      }
    } else if (variant >= -783416530) {
      if (variant >= -783415859) {
        return Pervasives.failwith("Cannot convert int64 to JSON");
      } else {
        return Pervasives.failwith("Cannot convert int32 to JSON");
      }
    } else if (variant >= -783416972) {
      return Pervasives.failwith("Cannot convert int16 to JSON");
    } else {
      return /* `String */[
              -976970511,
              x[1]
            ];
    }
  }
}

exports.biniou_of_json = biniou_of_json;
exports.json_of_biniou = json_of_biniou;
/* Bi_io Not a pure module */
